{"ast":null,"code":"var _jsxFileName = \"/Users/sarajendran/Personal/Own_Projects/Resume/uxnd/src/components/projectDetail/HorizontalLayout.js\";\n\n/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport \"./HorizontalLayout.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function HorizontalLayout({\n  content\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"horizontalLayout-content-main\",\n    children: [content.imageSide === \"left\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [content.imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: content.imageSize ? `horizontalLayout-image-div ${content.imageSize}` : \"horizontalLayout-image-div\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"man sitting on table\",\n          src: content.imageURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontalLayout-text-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"horizontalLayout-content-title-text\",\n          children: content.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this), content.paragraph && content.paragraph.map((paracontent, paraIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            className: \"horizontalLayout-content-title-text\",\n            children: paracontent.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontalLayout-content-text-p\",\n            children: /*#__PURE__*/_jsxDEV(RenderHTML, {\n              HTML: paracontent.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this)]\n        }, paraIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), (content.imageSide === \"right\" || !content.imageSide) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontalLayout-text-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"horizontalLayout-content-title-text\",\n          children: content.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), content.paragraph && content.paragraph.map((paracontent, paraIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: \"bold\"\n            },\n            className: \"horizontalLayout-content-title-text\",\n            children: paracontent.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"horizontalLayout-content-text-p\",\n            children: /*#__PURE__*/_jsxDEV(RenderHTML, {\n              HTML: paracontent.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 19\n          }, this)]\n        }, paraIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), content.imageURL && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: content.imageSize ? `horizontalLayout-image-div ${content.imageSize}` : \"horizontalLayout-image-div\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"man sitting on table\",\n          src: content.imageURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n_c = HorizontalLayout;\n\nconst RenderHTML = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  dangerouslySetInnerHTML: {\n    __html: props.HTML\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 83,\n  columnNumber: 3\n}, this);\n\n_c2 = RenderHTML;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"HorizontalLayout\");\n$RefreshReg$(_c2, \"RenderHTML\");","map":{"version":3,"sources":["/Users/sarajendran/Personal/Own_Projects/Resume/uxnd/src/components/projectDetail/HorizontalLayout.js"],"names":["React","HorizontalLayout","content","imageSide","imageURL","imageSize","title","paragraph","map","paracontent","paraIndex","fontWeight","RenderHTML","props","__html","HTML"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from \"react\";\nimport \"./HorizontalLayout.css\";\n\nexport default function HorizontalLayout({ content }) {\n  return (\n    <div className=\"horizontalLayout-content-main\">\n      {content.imageSide === \"left\" && (\n        <>\n          {content.imageURL && (\n            <div\n              className={\n                content.imageSize\n                  ? `horizontalLayout-image-div ${content.imageSize}`\n                  : \"horizontalLayout-image-div\"\n              }\n            >\n              <img alt=\"man sitting on table\" src={content.imageURL}></img>\n            </div>\n          )}\n          <div className=\"horizontalLayout-text-div\">\n            <h3 className={\"horizontalLayout-content-title-text\"}>\n              {content.title}\n            </h3>\n            {content.paragraph &&\n              content.paragraph.map((paracontent, paraIndex) => (\n                <div key={paraIndex}>\n                  <div\n                    style={{ fontWeight: \"bold\" }}\n                    className={\"horizontalLayout-content-title-text\"}\n                  >\n                    {paracontent.title}\n                  </div>\n\n                  <div className={\"horizontalLayout-content-text-p\"}>\n                    <RenderHTML HTML={paracontent.content}></RenderHTML>\n                  </div>\n                </div>\n              ))}\n          </div>\n        </>\n      )}\n      {(content.imageSide === \"right\" || !content.imageSide) && (\n        <>\n          <div className=\"horizontalLayout-text-div\">\n            <h3 className={\"horizontalLayout-content-title-text\"}>\n              {content.title}\n            </h3>\n            {content.paragraph &&\n              content.paragraph.map((paracontent, paraIndex) => (\n                <div key={paraIndex}>\n                  <div\n                    style={{ fontWeight: \"bold\" }}\n                    className={\"horizontalLayout-content-title-text\"}\n                  >\n                    {paracontent.title}\n                  </div>\n\n                  <div className={\"horizontalLayout-content-text-p\"}>\n                    <RenderHTML HTML={paracontent.content}></RenderHTML>\n                  </div>\n                </div>\n              ))}\n          </div>\n          {content.imageURL && (\n            <div\n              className={\n                content.imageSize\n                  ? `horizontalLayout-image-div ${content.imageSize}`\n                  : \"horizontalLayout-image-div\"\n              }\n            >\n              <img alt=\"man sitting on table\" src={content.imageURL}></img>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nconst RenderHTML = (props) => (\n  <div dangerouslySetInnerHTML={{ __html: props.HTML }}></div>\n);\n"]},"metadata":{},"sourceType":"module"}