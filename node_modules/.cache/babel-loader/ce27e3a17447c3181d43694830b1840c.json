{"ast":null,"code":"var _jsxFileName = \"/Users/sarajendran/Personal/Own_Projects/Resume/uxnd/src/components/experieceCard/ExperienceCard.js\";\n\n/* eslint-disable react/prop-types */\nimport \"./ExperienceCard.css\";\nimport Technology from \"../technology/Technology\";\nimport KeyExperience from \"../keyExperience/KeyExperience\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ExperienceCard(props) {\n  const getDateExperience = (start, end) => {\n    const monthsValues = {\n      Jan: 0,\n      Feb: 1,\n      Mar: 2,\n      Apr: 3,\n      May: 4,\n      Jun: 5,\n      Jul: 6,\n      Aug: 7,\n      Sep: 8,\n      Oct: 9,\n      Nov: 10,\n      Dec: 11\n    };\n    const [startMonth, startYear] = start.split(\" \");\n    let startDate = new Date(parseInt(startYear), monthsValues[startMonth], 1);\n    let endDate;\n\n    if (end === \"Present\") {\n      endDate = new Date();\n    } else {\n      const [endMonth, endYear] = end.split(\" \");\n      endDate = new Date(parseInt(endYear), monthsValues[endMonth], 1);\n    }\n\n    let months = (endDate.getFullYear() - startDate.getFullYear()) * 12 + 1;\n    months -= startDate.getMonth();\n    months += endDate.getMonth();\n    months = months <= 0 ? 0 : months;\n    let msg;\n\n    if (months < 12) {\n      msg = `${months} ${months == 1 ? \"mo\" : \"mos\"}`;\n    } else if (months % 12 == 0) {\n      msg = `${parseInt(months / 12)} ${parseInt(months / 12) == 1 ? \"yr\" : \"yrs\"}`;\n    } else {\n      msg = `${parseInt(months / 12)} ${parseInt(months / 12) == 1 ? \"yr\" : \"yrs\"} ${months % 12} ${months % 12 == 1 ? \"mo\" : \"mos\"}`;\n    }\n\n    return `${start} - ${end} (${msg})`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card-experience\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-experience\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo-experience\",\n        src: props.companyLogo,\n        alt: props.company\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-experience\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"role-experience\",\n          children: props.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"company-experience\",\n          children: props.company\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          className: \"location-experience\",\n          children: props.companyLocation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n          className: \"date-experience\",\n          children: getDateExperience(props.startDate, props.endDate)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body-experience\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Technologies\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), props.technologies.map((tech, i) => {\n            return /*#__PURE__*/_jsxDEV(Technology, {\n              name: tech\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            children: \"Key Experiences\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), props.keyExperiences.map((experience, i) => {\n            return /*#__PURE__*/_jsxDEV(KeyExperience, {\n              name: experience\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 22\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = ExperienceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExperienceCard\");","map":{"version":3,"sources":["/Users/sarajendran/Personal/Own_Projects/Resume/uxnd/src/components/experieceCard/ExperienceCard.js"],"names":["Technology","KeyExperience","ExperienceCard","props","getDateExperience","start","end","monthsValues","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","startMonth","startYear","split","startDate","Date","parseInt","endDate","endMonth","endYear","months","getFullYear","getMonth","msg","companyLogo","company","role","companyLocation","description","technologies","map","tech","i","keyExperiences","experience"],"mappings":"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","sourcesContent":["/* eslint-disable react/prop-types */\nimport \"./ExperienceCard.css\";\nimport Technology from \"../technology/Technology\";\nimport KeyExperience from \"../keyExperience/KeyExperience\";\n\nexport default function ExperienceCard(props) {\n  const getDateExperience = (start, end) => {\n    const monthsValues = {\n      Jan: 0,\n      Feb: 1,\n      Mar: 2,\n      Apr: 3,\n      May: 4,\n      Jun: 5,\n      Jul: 6,\n      Aug: 7,\n      Sep: 8,\n      Oct: 9,\n      Nov: 10,\n      Dec: 11,\n    };\n    const [startMonth, startYear] = start.split(\" \");\n    let startDate = new Date(parseInt(startYear), monthsValues[startMonth], 1);\n    let endDate;\n    if (end === \"Present\") {\n      endDate = new Date();\n    } else {\n      const [endMonth, endYear] = end.split(\" \");\n      endDate = new Date(parseInt(endYear), monthsValues[endMonth], 1);\n    }\n\n    let months = (endDate.getFullYear() - startDate.getFullYear()) * 12 + 1;\n    months -= startDate.getMonth();\n    months += endDate.getMonth();\n    months = months <= 0 ? 0 : months;\n\n    let msg;\n    if (months < 12) {\n      msg = `${months} ${months == 1 ? \"mo\" : \"mos\"}`;\n    } else if (months % 12 == 0) {\n      msg = `${parseInt(months / 12)} ${\n        parseInt(months / 12) == 1 ? \"yr\" : \"yrs\"\n      }`;\n    } else {\n      msg = `${parseInt(months / 12)} ${\n        parseInt(months / 12) == 1 ? \"yr\" : \"yrs\"\n      } ${months % 12} ${months % 12 == 1 ? \"mo\" : \"mos\"}`;\n    }\n\n    return `${start} - ${end} (${msg})`;\n  };\n\n  return (\n    <div className=\"card-experience\">\n      <div className=\"title-experience\">\n        <img\n          className=\"logo-experience\"\n          src={props.companyLogo}\n          alt={props.company}\n        />\n        <div className=\"info-experience\">\n          <h3 className=\"role-experience\">{props.role}</h3>\n          <h4 className=\"company-experience\">{props.company}</h4>\n          <em className=\"location-experience\">{props.companyLocation}</em>\n          <em className=\"date-experience\">\n            {getDateExperience(props.startDate, props.endDate)}\n          </em>\n        </div>\n      </div>\n      <div className=\"body-experience\">\n        <p>{props.description}</p>\n        <ul>\n          <li>\n            <h5>Technologies</h5>\n            {props.technologies.map((tech, i) => {\n              return <Technology key={i} name={tech} />;\n            })}\n          </li>\n          <li>\n            <h5>Key Experiences</h5>\n            {props.keyExperiences.map((experience, i) => {\n              return <KeyExperience key={i} name={experience} />;\n            })}\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}